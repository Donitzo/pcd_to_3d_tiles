[output]
# Full output path prefix, without any extensions.
# The following files will or may be saved:
#   "<prefix>_mesh.obj/mtl/png": Tile mesh.
#   "<prefix>_mesh_screenshot.png": Screenshot of the tile mesh.
#   "<prefix>_vegetation_filter.obj": Vegetation filter mesh.
#   "<prefix>_pcd_original.ply": The point cloud data before processing (color = class).
#   "<prefix>_pcd_processed.ply": The point cloud data after processing (color = class).
# The following template tags are supported in "path_prefix":
#   "tile_x/tile_y": Tile index.
#   "min_x/min_y/max_x/max_y": Tile start coordinates in TM35FIN meters.
path_prefix = ./output/tile_tx=<tile_x>_ty=<tile_y>
# Whether to save tile point clouds as PLY models.
save_point_cloud = yes

[screenshot]
# Whether to create a screenshot for each tile.
create_screenshot = yes
# Whether to draw a wireframe over the mesh.
draw_wireframe = yes
# Optional path to a camera parameters JSON file, created using "p" in the Open3D visualizer (see "visualize_mesh.py").
camera_parameters_json_path = ./data/ScreenCamera_2024-02-26-01-57-31.json

[data_sources]
# Filenames must follow the TM35FIN code naming convention e.g.: "P3234F4.laz".
# Specifies the glob pattern to LAS/LAZ files to be processed (use /**/ for recursion).
las_path_pattern = ./data/laser/**/*.laz
# Specifies the glob pattern to the image files to be processed (use /**/ for recursion).
image_path_pattern = ./data/orto/**/*.png

[image]
# https://pillow.readthedocs.io/en/stable/reference/ImageEnhance.html#PIL.ImageEnhance.Color
# Brightness change.
brightness = 0.8
# Contrast change.
contrast = 1.7
# Color enhancement.
color_enhance = 1.6

[tiling]
# Specifies the size of each map tile in meters.
tile_size = 500
# Specifies the padding around each tile during processing in meters.
tile_padding = 30
# Optionally defines the geographic boundaries (extent) within which to process the map tiles (in TM35FIN meters).
# If no extent is given, the extent is calculated (and displayed) from all source files.
#extent = min x, min y, max x, max y
extent = 232800, 7005950, 232900, 7006050

[outlier_detection]
# Maximum distance from a point to its neighbors to not be considered an outlier (in meters).
max_neighbor_distance = 5.0
# Minimum number of neighbors within the max_neighbor_distance for a point to not be considered an outlier.
min_neighbors = 1

[anisotropic_diffusion]
# The number of nearest neighboring points to consider during the anisotropic diffusion.
neighbors = 30
# How many times the anisotropic diffusion algorithm is applied.
iterations = 0
# Determines the sensitivity (k parameter) of the diffusion process to edges within the point cloud.
# Lower values make the algorithm more sensitive to edges, helping to preserve them during smoothing.
sensitivity = 0.1
# Controls the rate of diffusion, adjusting how much each point is influenced by its neighbors during each iteration.
# Smaller values result in more subtle smoothing, preserving more of the original detail.
diffusion_coefficient = 0.1

[mesh_decimation]
# The target Root-mean-square error between the point cloud and final mesh.
# A larger value allows for a higher decimation factor/less detailed mesh.
target_rmse = 0.5
# The number of binary search iterations when searching for the optimal decimation factor.
# 0 iterations disables decimation.
binary_search_iterations = 8

[vegetation_smoothing]
# Whether to smooth vegetation points using height aggregation.
smooth_vegetation = yes
# Defines the radius in meters around vegetation points for aggregating/smoothing vegetation height.
aggregate_distance = 4.0
# Specifies the integer percentile of vegetation height to be used for aggregation.
# This value determines the height below which a certain percentage of all vegetation points within the aggregate distance fall.
aggregate_percentile = 85

[vegetation_filter]
# Whether to remove ground points inside vegetation using a filter mesh.
# This reduces small holes inside thick vegetation.
filter_ground_points = yes
# The maximum edge length of the triangles in the filter mesh.
max_filter_face_edge_length = 4.0
# Whether to save the filter mesh. The mesh roughly approximates vegetation areas.
save_filter_mesh = no
